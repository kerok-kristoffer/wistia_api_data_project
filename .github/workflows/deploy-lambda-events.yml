name: Deploy Lambda (events)

on:
  workflow_dispatch:
  push:
    paths:
      - "src/ingestion/lambda_events/**"
      - "lambda_requirements.txt"
      - ".github/workflows/deploy-lambda-events.yml"

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    if: ${{ vars.ENABLE_DEPLOY == 'true' }}
    environment: kerok-vistia-env
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ vars.GH_OIDC_ROLE }}
          aws-region: ${{ vars.AWS_REGION || 'us-east-1' }}

      - name: Build deployment zip
        run: |
          set -e
          rm -rf build lambda_events.zip
          python -m pip install -U pip
          pip install -r lambda_requirements.txt -t build
          mkdir -p build_tmp
          cp -r src/* build_tmp/
          cp -r build/* build_tmp/
          cd build_tmp
          zip -r ../lambda_events.zip .
          cd ..
          ls -lh lambda_events.zip

      - name: Who am I?
        run: aws sts get-caller-identity

      - name: Deploy code to Lambda
        env:
          LAMBDA_NAME: ${{ vars.LAMBDA_EVENTS_NAME }}
        run: |
          aws lambda update-function-code \
            --function-name "$LAMBDA_NAME" \
            --zip-file fileb://lambda_events.zip \
            --publish

      - name: Smoke invoke
        if: ${{ vars.SMOKE_INVOKE == 'true' }}
        env:
          LAMBDA_NAME: ${{ vars.LAMBDA_EVENTS_NAME }}
        run: |
          DAY=$(date -u +%F)
          aws lambda invoke \
            --function-name "$LAMBDA_NAME" \
            --payload "{\"day\":\"$DAY\"}" \
            --cli-binary-format raw-in-base64-out \
            out.json
          echo "Lambda response:"
          cat out.json
